diff --git a/dlls/win32u/d3dkmt.c b/dlls/win32u/d3dkmt.c
index f4d695ac0cb..c489601e147 100644
--- a/dlls/win32u/d3dkmt.c
+++ b/dlls/win32u/d3dkmt.c
@@ -223,15 +223,48 @@ NTSTATUS WINAPI NtGdiDdDDIDestroyDevice( const D3DKMT_DESTROYDEVICE *desc )
     return STATUS_SUCCESS;
 }
 
+static BOOL check_hags_enabled( void )
+{
+    const char *winehags = getenv( "WINEHAGS" );
+    return winehags && *winehags != '0';
+}
+
 /******************************************************************************
  *           NtGdiDdDDIQueryAdapterInfo    (win32u.@)
  */
 NTSTATUS WINAPI NtGdiDdDDIQueryAdapterInfo( D3DKMT_QUERYADAPTERINFO *desc )
 {
+    D3DKMT_WDDM_2_7_CAPS *d3dkmt_wddm_2_7_caps;
+
     if (!desc) return STATUS_INVALID_PARAMETER;
 
-    FIXME( "desc %p, type %d stub\n", desc, desc->Type );
-    return STATUS_NOT_IMPLEMENTED;
+    TRACE("desc %p, type %d\n", desc, desc->Type);
+
+    switch (desc->Type)
+    {
+        case KMTQAITYPE_WDDM_2_7_CAPS:
+            if (!desc->pPrivateDriverData || desc->PrivateDriverDataSize != sizeof(D3DKMT_WDDM_2_7_CAPS))
+                return STATUS_INVALID_PARAMETER;
+
+            d3dkmt_wddm_2_7_caps = desc->pPrivateDriverData;
+            d3dkmt_wddm_2_7_caps->HwSchSupported = 1;
+            d3dkmt_wddm_2_7_caps->HwSchEnabled = 0;
+            d3dkmt_wddm_2_7_caps->HwSchEnabledByDefault = 0;
+            d3dkmt_wddm_2_7_caps->IndependentVidPnVSyncControl = 0;
+
+            if (check_hags_enabled())
+            {
+                d3dkmt_wddm_2_7_caps->HwSchEnabled = 1;
+                d3dkmt_wddm_2_7_caps->HwSchEnabledByDefault = 1;
+            }
+            break;
+
+        default:
+            FIXME("type %d not supported\n", desc->Type);
+            return STATUS_NOT_IMPLEMENTED;
+    }
+
+    return STATUS_SUCCESS;
 }
 
 /******************************************************************************
diff --git a/include/ddk/d3dkmthk.h b/include/ddk/d3dkmthk.h
index 918a4ad..4b2c5a7 100644
--- a/include/ddk/d3dkmthk.h
+++ b/include/ddk/d3dkmthk.h
@@ -1260,6 +1260,22 @@ typedef struct _D3DKMT_QUERYRESOURCEINFOFROMNTHANDLE
     UINT NumAllocations;
 } D3DKMT_QUERYRESOURCEINFOFROMNTHANDLE;
 
+typedef struct _D3DKMT_WDDM_2_7_CAPS
+{
+  union
+  {
+    struct
+    {
+      UINT HwSchSupported               :  1;
+      UINT HwSchEnabled                 :  1;
+      UINT HwSchEnabledByDefault        :  1;
+      UINT IndependentVidPnVSyncControl :  1;
+      UINT Reserved                     : 28;
+    };
+    UINT Value;
+  };
+} D3DKMT_WDDM_2_7_CAPS;
+
 #ifdef __cplusplus
 extern "C"
 {
