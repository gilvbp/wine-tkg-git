Subject: [PATCH] added wine_hags code (10.3 and above)

diff --git a/dlls/win32u/d3dkmt.c b/dlls/win32u/d3dkmt.c
--- a/dlls/win32u/d3dkmt.c	(revision 4cb856a95de0d28947fe59a98296682a7444894e)
+++ b/dlls/win32u/d3dkmt.c	(date 1742136253461)
@@ -327,45 +327,50 @@
     free( found );
     return STATUS_SUCCESS;
 }
-
+static BOOL check_hags_enabled( void )
+{
+    const char *winehags = getenv( "WINEHAGS" );
+    return winehags && *winehags != '0';
+}
 /******************************************************************************
  *           NtGdiDdDDIQueryAdapterInfo    (win32u.@)
  */
 NTSTATUS WINAPI NtGdiDdDDIQueryAdapterInfo( D3DKMT_QUERYADAPTERINFO *desc )
 {
+    D3DKMT_WDDM_2_7_CAPS *d3dkmt_wddm_2_7_caps;
+
     TRACE( "(%p).\n", desc );
 
     if (!desc || !desc->hAdapter || !desc->pPrivateDriverData)
         return STATUS_INVALID_PARAMETER;
 
+    TRACE("desc %p, type %d\n", desc, desc->Type);
+
     switch (desc->Type)
     {
-    case KMTQAITYPE_CHECKDRIVERUPDATESTATUS:
-    {
-        BOOL *value = desc->pPrivateDriverData;
-
-        if (desc->PrivateDriverDataSize < sizeof(*value))
-            return STATUS_INVALID_PARAMETER;
-
-        *value = FALSE;
-        return STATUS_SUCCESS;
-    }
-    case KMTQAITYPE_DRIVERVERSION:
-    {
-        D3DKMT_DRIVERVERSION *value = desc->pPrivateDriverData;
-
-        if (desc->PrivateDriverDataSize < sizeof(*value))
-            return STATUS_INVALID_PARAMETER;
+        case KMTQAITYPE_WDDM_2_7_CAPS:
+            if (!desc->pPrivateDriverData || desc->PrivateDriverDataSize != sizeof(D3DKMT_WDDM_2_7_CAPS))
+                return STATUS_INVALID_PARAMETER;
 
-        *value = KMT_DRIVERVERSION_WDDM_1_3;
-        return STATUS_SUCCESS;
-    }
-    default:
-    {
-        FIXME( "type %d not handled.\n", desc->Type );
-        return STATUS_NOT_IMPLEMENTED;
+            d3dkmt_wddm_2_7_caps = desc->pPrivateDriverData;
+            d3dkmt_wddm_2_7_caps->HwSchSupported = 1;
+            d3dkmt_wddm_2_7_caps->HwSchEnabled = 0;
+            d3dkmt_wddm_2_7_caps->HwSchEnabledByDefault = 0;
+            d3dkmt_wddm_2_7_caps->IndependentVidPnVSyncControl = 0;
+
+            if (check_hags_enabled())
+            {
+                d3dkmt_wddm_2_7_caps->HwSchEnabled = 1;
+                d3dkmt_wddm_2_7_caps->HwSchEnabledByDefault = 1;
+            }
+            break;
+
+        default:
+            FIXME("type %d not supported\n", desc->Type);
+            return STATUS_NOT_IMPLEMENTED;
     }
-    }
+
+    return STATUS_SUCCESS;
 }
 
 /******************************************************************************

diff --git a/include/ddk/d3dkmthk.h b/include/ddk/d3dkmthk.h
--- a/include/ddk/d3dkmthk.h	(revision 4cb856a95de0d28947fe59a98296682a7444894e)
+++ b/include/ddk/d3dkmthk.h	(date 1742136346893)
@@ -1281,6 +1281,22 @@
     UINT NumAllocations;
 } D3DKMT_QUERYRESOURCEINFOFROMNTHANDLE;
 
+typedef struct _D3DKMT_WDDM_2_7_CAPS
+{
+    union
+    {
+        struct
+        {
+            UINT HwSchSupported               :  1;
+            UINT HwSchEnabled                 :  1;
+            UINT HwSchEnabledByDefault        :  1;
+            UINT IndependentVidPnVSyncControl :  1;
+            UINT Reserved                     : 28;
+        };
+        UINT Value;
+    };
+} D3DKMT_WDDM_2_7_CAPS;
+
 #ifdef __cplusplus
 extern "C"
 {

diff --git a/include/d3dkmdt.h b/include/d3dkmdt.h
--- a/include/d3dkmdt.h	(revision 4cb856a95de0d28947fe59a98296682a7444894e)
+++ b/include/d3dkmdt.h	(date 1742136346873)
@@ -146,22 +146,6 @@
     };
 } D3DKMT_WDDM_2_0_CAPS;
 
-typedef struct _D3DKMT_WDDM_2_7_CAPS
-{
-    union
-    {
-        struct
-        {
-            UINT HwSchSupported               :  1;
-            UINT HwSchEnabled                 :  1;
-            UINT HwSchEnabledByDefault        :  1;
-            UINT IndependentVidPnVSyncControl :  1;
-            UINT Reserved                     : 28;
-        };
-        UINT Value;
-    };
-} D3DKMT_WDDM_2_7_CAPS;
-
 typedef struct _D3DKMT_WDDM_2_9_CAPS
 {
     union
